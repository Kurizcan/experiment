version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: experiment-zookeeper
    ports:
      - "2181"
  kafka1:
    image: wurstmeister/kafka
    container_name: experiment-kafka1
    depends_on:
      - zookeeper
    ports:
      - "9094:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.31.134.22
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    command: ["./wait-for-it.sh", "zookeeper:2181", "--", "start-kafka.sh"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  kafka2:
    image: wurstmeister/kafka
    container_name: experiment-kafka2
    depends_on:
      - zookeeper
    ports:
      - "9095:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.31.134.22
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    command: ["./wait-for-it.sh", "zookeeper:2181", "--", "start-kafka.sh"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  mysql:
    image: mysql:8.0
    container_name: experiment-mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: db_experiment
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./my.cnf:/etc/mysql/conf.d/custom.cnf
  redis:
    image: redis:5.0.7
    container_name: experiment-redis
    command: redis-server --requirepass 123456
    ports:
      - "6379:6379"
  experiment-api-server:
    container_name: experiment-api-server
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - mysql
      - redis
      - zookeeper
      - kafka1
      - kafka2
    command: ["./wait-for-it.sh", "mysql:3306", "redis:6379", "kafka1:9092", "kafka2:9092", "--", "./experiment"]
    restart: on-failure